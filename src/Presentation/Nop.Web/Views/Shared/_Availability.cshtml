@model ProductDetailsModel
@if (!string.IsNullOrWhiteSpace(Model.StockAvailability) || Model.DisplayBackInStockSubscription)
{
    var total = Model.StockQuantity + Model.CurrentStockQuantity;
    var curPerc = Model.CurrentStockQuantity / (Model.StockQuantity + Model.CurrentStockQuantity) * 100;
<div class="availability">
    <div class="stock">
        <span class="value">@Model.CurrentStoreName</span>
    </div>
    @if (Model.AvailableEndDate.HasValue)
    {
<div id="counterCtrl-@Model.Id">
    <div class="stock">
        <span class="value" id="stock-availabilityenddate-value-@Model.Id"></span>
    </div>
    <div class="stock">
        <span class="label" style="font-weight: bold">@Model.CurrentStockQuantity productos comprados</span>
    </div>
    <progress max=100 value="@curPerc" style="width: 100%; height: 25px"></progress>
    <div class="stock">
        @if (Model.StockQuantity <= 0)
        {
        <span class="label" style="font-weight: bold">Ya se llegó al precio mayorista!</span>
        }
        else
        {
            <span class="label" style="font-weight: bold">Faltan @Model.StockQuantity unidades para precio mayorista!</span>
        }
    </div>
</div>
        <div id="legendCtrl-@Model.Id">
            <div class="stock" style="padding-top: 10px">
                <span class="label">@T("Products.Availability"):</span>
                <span class="value" id="stock-availability-value-@Model.Id">Sin Stock</span>
            </div>
        </div>

        <script asp-location="Footer">
    function counter(id) {
        var current_date = new Date().getTime();
        var future_date = new Date(@Model.AvailableEndDate.Value.Year,
                                    @Model.AvailableEndDate.Value.Month-1,
                                    @Model.AvailableEndDate.Value.Day,
                                    @Model.AvailableEndDate.Value.Hour,
                                    @Model.AvailableEndDate.Value.Minute,
                                    @Model.AvailableEndDate.Value.Second).getTime();

        var seconds_left = (future_date - current_date) / 1000;

        days = parseInt(seconds_left / 86400);
        seconds_left = seconds_left % 86400;
        console.log(days, seconds_left)

        hours = parseInt(seconds_left / 3600);
        seconds_left = seconds_left % 3600;

        minutes = parseInt(seconds_left / 60);
        seconds = parseInt(seconds_left % 60);

        if (seconds <= 0) {
            $("#counterCtrl-" + id).hide();
            $("#legendCtrl-" + id).show();
        } else {
            $("#counterCtrl-" + id).show();
            $("#legendCtrl-" + id).hide();
        }

        var countdown = days + "d, " + hours + "h, " + minutes + "m, " + seconds + "s";
        $("#stock-availabilityenddate-value-" + id).text(countdown + " para que la promoción cierre");
    }
    $(document).ready(function () {
        $("#counterCtrl-@Model.Id").hide();
        $("#legendCtrl-@Model.Id").hide();

        counter();
        window.setInterval(function () {
            counter(@Model.Id);
        }, 1000);
    });
        </script>
    }
    else
    {
        <div class="stock" style="padding-top: 10px">
            <span class="label">@T("Products.Availability"):</span>
            <span class="value" id="stock-availability-value-@Model.Id">@Model.StockAvailability</span>
        </div>
    }
    @await Html.PartialAsync("_BackInStockSubscription", Model)

</div>
}