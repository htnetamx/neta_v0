@model Nop.Web.Models.Catalog.SearchModel
@inject Nop.Core.IStoreContext storeContext

@if (Model.CatalogProductsModel.PromoRayo.Count > 0)
{
    <div class="product-grid home-page-product-grid" style="margin: 0px">
        <div style="text-align: left; margin-bottom: 15px">
            <p style="margin: 0px; font: bold 18px Roboto; line-height: 25.2px;color: #212121"><br>Promos Rayo</p>
        </div>
        <div id="Descuentos-Dia" class="item-grid">
            @foreach (var item in Model.CatalogProductsModel.PromoRayo.OrderBy(v => v.DisplayOrder))
            {
                <div class="item-box" style="margin-left: 0px; margin-right: 0px;">
                    @await Html.PartialAsync("_ProductBoxPromoRayo", item)
                </div>
            }
        </div>
    </div>
}

<script>
    //scroller();
    window.addEventListener('load', function () {
        window.addEventListener("orientationchange", orientationChange);
    });

    var cantxfilas = 3;

    function homePageActions(cantxfilas) {
        //scroller();
        var clientWidth = document.getElementsByClassName("master-column-wrapper")[0].clientWidth - 1;
        cantxfilas = maxPerRow(clientWidth);

        var hay_productos_descuentos =(@Model.CatalogProductsModel.Promos.Count > 0);
        var hay_productos_ofertas = (@Model.CatalogProductsModel.Products.Count > 0);

        if (hay_productos_descuentos) {
            decuentos_width = productsInColumns("Descuentos-Dia", cantxfilas);
            productTitleSizer("Descuentos-Dia");
        }
        if (hay_productos_ofertas) {
            oferta_width = productsInColumns("Oferta-Precios-Bajos", cantxfilas);
            productTitleSizer("Oferta-Precios-Bajos");
        }
    }

    function orientationChange() {
        var afterOrientationChange = function () {
            var clientWidth = document.getElementsByClassName("master-column-wrapper")[0].clientWidth - 1;
            var cantxfila_orientacion;
            var orientacion = event.target.screen.orientation.angle;
            if (orientacion == 0) {
                cantxfila_orientacion = cantxfilas;
            }
            else {
                cantxfila_orientacion = maxPerRow(clientWidth);
            }
            homePageActions(cantxfila_orientacion);
            basicResize();
            window.removeEventListener('resize', afterOrientationChange);
        };
        window.addEventListener('resize', afterOrientationChange);
    }

    function scroller() {
        try {
            var queryString = window.location.search;
            var urlParams = new URLSearchParams(queryString);
            var current = urlParams.get('pagesize');
            var newWidth = document.querySelector(".master-wrapper-content").scrollWidth;
            var heightP = document.querySelector('.item-box').scrollHeight;
            var widthP = document.querySelector('.item-box').scrollWidth;
            var cantidadProductosFila = Math.floor((newWidth / widthP));
            var increment = 0;
            var end_sum= 1;
            if (current == 0 || current==null) {
                increment = 0;
                current =@Model.CatalogProductsModel.StartingProducts;
                end_sum = 0;
            }
            else {
                increment =@Model.CatalogProductsModel.Increment;
                current =@Model.CatalogProductsModel.Products.ToList().Count();
                end_sum = 1;
            }

            var product_Count_before = current - (increment);
            var filas_anteriores = Math.ceil((product_Count_before / cantidadProductosFila));
            var filas_actuales = Math.ceil((current / cantidadProductosFila));
            var filas_a_restar = filas_actuales - filas_anteriores - end_sum;
            var fila_final = (filas_actuales - filas_a_restar)*end_sum;
            window.scrollTo(0, heightP * fila_final);
        }
        catch (e) {

        }
    }

    function productsInColumns(id, cantxfila) {
        var clientWidth = document.getElementsByClassName("master-column-wrapper")[0].clientWidth - 1;
        var err_percent = 5;
        porcentaje_ancho = ((100 - err_percent) / cantxfila) / 100;
        var ancho = (clientWidth * porcentaje_ancho);
        var espacio_libre = clientWidth - ancho * cantxfila;
        margen_izquierda = espacio_libre / (cantxfila - 1);
        x = document.getElementById(id).getElementsByClassName("item-box");
        for (var i = 0; i < x.length; i++) {
            x[i].style.width = ancho.toString() + "px";
            x[i].style.marginBottom = "40px";
            x[i].style.marginLeft = "0px";
            if (i % cantxfila != 0) {
                x[i].style.marginLeft = margen_izquierda.toString() + "px";
            }

        }
        return x[0].style.width;
    }

    function productTitleSizer(id) {
        var x = document.getElementById(id).getElementsByClassName("new-product-title");
        var y = document.getElementById(id).getElementsByClassName("price-Qs");
        var max = 0;
        var maxy = 0;
        var promedio = 0;
        var promedioy = 0;
        for (var i = 0; i < x.length; i++) {
            if (x[i].clientHeight > max) {
                max = x[i].clientHeight;
            }
            if (y[i].clientHeight > maxy) {
                maxy = y[i].clientHeight;
            }
            promedio  = promedio  + x[i].clientHeight;
            promedioy = promedioy + y[i].clientHeight;
        }

        promedio  = promedio  / x.length;
        promedioy = promedioy / y.length;

        for (var i = 0; i < x.length; i++) {
            x[i].style.height = max.toString() + "px";
            y[i].style.height = maxy.toString() + "px";
        }
    }

    function maxPerRow(clientWidth) {
        if (clientWidth < 979) {
            if (clientWidth < 722) {
                return 2;
            }
            else {
                return 3;
            }
        }
        else {
            return 4;
        }
    }
</script>