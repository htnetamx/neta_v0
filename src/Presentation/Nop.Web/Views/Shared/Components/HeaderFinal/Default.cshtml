@model HeaderFinalModel
@using Nop.Core.Domain.Customers
@inject Nop.Core.IStoreContext storeContext
@inject Nop.Core.IWebHelper webHelper

<div>
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderLinksBefore })
    <ul id="auth_list">
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderLinksBefore })
        @if (Model.IsAuthenticated)
        {
            @*<li><a href="@Url.RouteUrl("CustomerInfo")" class="ico-account">@T("Account.MyAccount")</a></li>
                <li><a href="@Url.RouteUrl("Logout")" class="ico-logout">@T("Account.Logout")</a></li>*@
        }
        else
        {
            var returnUrl = Context.Request.Query.TryGetValue("returnUrl", out var url) && !StringValues.IsNullOrEmpty(url)
                ? url.ToString()
                : webHelper.GetRawUrl(Context.Request);

            @if (Model.RegistrationType != UserRegistrationType.Disabled)
            {
                @*<li><a href="@Url.RouteUrl("Register", new { returnUrl })" class="ico-register">@T("Account.Register")</a></li>*@
            }
            @*<li><a href="@Url.RouteUrl("Login", new { returnUrl })" class="ico-login">@T("Account.Login")</a></li>*@
        }
        @if (Model.AllowPrivateMessages)
        {
            @*<li>
                    <a href="@Url.RouteUrl("PrivateMessages", new { tab = "" })" class="ico-inbox">
                        <span class="inbox-label">@T("PrivateMessages.Inbox")</span>
                        <span class="inbox-unread">@Model.UnreadPrivateMessages</span>
                    </a>
                </li>*@
        }
        @if (Model.WishlistEnabled)
        {
            @*<li>
                    <a href="@Url.RouteUrl("Wishlist")" class="ico-wishlist">
                        <span class="wishlist-label">@T("Wishlist")</span>
                        <span class="wishlist-qty">@T("Wishlist.HeaderQuantity", Model.WishlistItems)</span>
                    </a>
                </li>*@
        }
    </ul>

    @if (Model.ShoppingCartEnabled)
    {
        string absoluteurl = Context.Request.Path;
        //if (!absoluteurl.Contains("cart") && !absoluteurl.Contains("checkout"))
        if (!absoluteurl.Contains("checkout"))
        {
            <div id="headerV21">
                <nav class="navbar navbar-expand-lg navbar-light bg-light">
                    <div class="container-fluid" style="padding: 0px">
                        <a class="navbar-brand" href="/" style="display: flex ">
                            <img src="images/header2/Logo_Neta.svg" alt="" width="30" height="24" class="d-inline-block align-text-top">
                            <p id="storeName" style="margin: 0px; margin-left: 4vw; max-width: 65vw; overflow: hidden; text-overflow: ellipsis;">sjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjasdhjashdjkashda askjdgkjasdlas jaskdjgas</p>
                        </a>
                        <div class="navbar-nav" style="position:relative">
                            <a href="@Url.RouteUrl("ShoppingCart")" style="height: 100%;width:100%">
                                <img src="images/header2/Shopping-cart.svg" alt="" width="30" height="24" class="d-inline-block align-text-top">
                            </a>
                            <span style="background-color: #FE4C4B;width: 18px;height: 18px;border-radius: 50%;display:inline-block;position:absolute;left:20px;top:13px;text-align:center;color:white;align-items:center;justify-content:center;display:flex;font-size: 12px">@Model.ShoppingCartItems.ToString("N0")</span>
                        </div>
                    </div>
                </nav>
            </div>
            <div id="cartInfo" style="background-color: #05796B; height: 6vh; width: 100vw; display: flex; align-items: center; justify-content: space-between">
                <p style="font: normal 16px Roboto; color: #FFFFFF; margin: 0px;line-height: 22.4px">Total: <strong>$@Model.ShoppingCartTotal.ToString("N2")</strong></p>
                <a href="@Url.RouteUrl("ShoppingCart")">
                    <p style="font: normal 16px Roboto; color: #FFFFFF; margin: 0px; line-height: 22.4px">Finaliza tu pedido ></p>
                </a>
            </div>
        }
    }

    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderLinksAfter })
    @if (Model.AllowPrivateMessages && !string.IsNullOrEmpty(Model.AlertMessage))
    {
        //new private message notification
        <script asp-location="Footer">
            $(document).ready(function () {
                displayPopupNotification('@Html.Raw(JavaScriptEncoder.Default.Encode(Model.AlertMessage))', 'success', false);
            });
        </script>
    }
    @if (Model.ShoppingCartEnabled)
    {
        <script asp-location="Footer">
                                                                    //$(document).ready(function () {
                                                                    //    $('.header').on('mouseenter', '#topcartlink', function () {
                                                                    //        $('#flyout-cart').addClass('active');
                                                                    //    });
                                                                    //    $('.header').on('mouseleave', '#topcartlink', function () {
                                                                    //        $('#flyout-cart').removeClass('active');
                                                                    //    });
                                                                    //    $('.header').on('mouseenter', '#flyout-cart', function () {
                                                                    //        $('#flyout-cart').addClass('active');
                                                                    //    });
                                                                    //    $('.header').on('mouseleave', '#flyout-cart', function () {
                                                                    //        $('#flyout-cart').removeClass('active');
                                                                    //    });
                                                                    //});
        </script>
    }
</div>
