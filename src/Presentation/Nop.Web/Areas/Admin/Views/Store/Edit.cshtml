@model StoreModel
@using Nop.Web.Framework.Models.AdminAreaTour

@{
    //page title
    ViewBag.PageTitle = T("Admin.Configuration.Stores.EditStoreDetails").Text;
    //tour step
    ViewBag.TourStep = TourStep.Store;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Stores");
}

@await Html.PartialAsync("_AdminTour")
<form asp-controller="Store" asp-action="Edit" method="post">
    <div class="content-header clearfix">
        <h1 class="float-left">
            @T("Admin.Configuration.Stores.EditStoreDetails") - @Model.Name
            <small>
                <i class="fas fa-arrow-circle-left"></i>
                <a asp-action="List">@T("Admin.Configuration.Stores.BackToList")</a>
            </small>
        </h1>
        <div class="float-right">
            <button type="submit" name="save" class="btn btn-primary">
                <i class="far fa-save"></i>
                @T("Admin.Common.Save")
            </button>
            <button type="submit" name="save-continue" class="btn btn-primary">
                <i class="far fa-save"></i>
                @T("Admin.Common.SaveContinue")
            </button>
            <span id="store-delete" class="btn btn-danger">
                <i class="far fa-trash-alt"></i>
                @T("Admin.Common.Delete")
            </span>
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.StoreDetailsButtons, additionalData = Model })
        </div>
    </div>
    @await Html.PartialAsync("_CreateOrUpdate", Model)
</form>
<nop-delete-confirmation asp-model-id="@Model.Id" asp-button-id="store-delete" />

<script>
    $.fn.bindFirst = function (name, fn) {
        var elem, handlers, i, _len;
        this.bind(name, fn);
        for (i = 0, _len = this.length; i < _len; i++) {
            elem = this[i];
            handlers = jQuery._data(elem).events[name.split('.')[0]];
            handlers.unshift(handlers.pop());
        }
    };

    function filterbeforeBD() {
        var elements = document.getElementsByClassName("k-link-date")
        for (var i = 0; i < elements.length; ++i) {
            var id = elements[i].parentNode.parentNode.parentNode.parentNode.id;
            var input = document.getElementById(id + "DateTimeUtc");

            var today = new Date();
            var date = today.getDate() + '/' + (today.getMonth() + 1) + '/' + today.getFullYear();
            var date2 = date + " 12: 00: 00 a.m."
            var date3 = date + " 12: 00: 00 a. m."
            date = date + " 0:00:00";


            var element = document.getElementById(id);
            var day = id.replace("Start", "").replace("End", "");
            if (date == input.value || date2 == input.value || date3 == input.value || !($("#"+day+"CheckBox").is(':checked'))) {
                element = document.getElementById(day+"Info");
                console.log(element)
                element.remove();
                i--;
            }
        }
    }
    $('button[name="save"]').bindFirst("click", function () { filterbeforeBD() });
    $('button[name="save-continue"]').bindFirst("click", function () { filterbeforeBD() });
</script>
