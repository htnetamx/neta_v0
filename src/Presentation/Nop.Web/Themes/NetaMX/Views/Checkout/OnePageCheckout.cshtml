@model OnePageCheckoutModel
@using Nop.Core
@using Nop.Services.Customers
@using Nop.Core.Infrastructure
@inject IWebHelper webHelper
@inject IWorkContext workContext
@inject ICustomerService _customerService
@{
    Layout = "_ColumnsOne";

    //scripts
    Html.AddScriptParts(ResourceLocation.Footer, "~/js/public.accordion.js?" + Guid.NewGuid());
    Html.AddScriptParts(ResourceLocation.Footer, "~/js/public.onepagecheckout.js?" + Guid.NewGuid());

    var storeLocation = webHelper.GetStoreLocation();

    //title
    Html.AddTitleParts(T("PageTitle.Checkout").Text);
    //page class
    Html.AppendPageCssClassParts("html-checkout-page desktop-layout");

    var service = EngineContext.Current.Resolve<Nop.Services.Common.IAddressService>();
    var currentCustomer = workContext.GetCurrentCustomerAsync().Result;
    var billingAddress = currentCustomer?.BillingAddressId;
    var addressObj = service.GetAddressByIdAsync(billingAddress ?? 0).Result;
    var name = addressObj?.FirstName;
    var phone = addressObj?.PhoneNumber;

    var children = service.GetRelatedAddressByIdAsync(phone).Result;
    var cnt = children.Count;
    var maxSubaccounts = 2;

    var firstChild = children.Count <= 0 ? 0 : children.First().Id;
    var lastChild = children.Count <= 0 ? 0 : children.Last().Id;


    if (string.IsNullOrWhiteSpace(name))
    {
        name = "Sin Nombre";
    }

    //step numbers
    var billingAddressStepNumber = 1;
    var shippingAddressStepNumber = 2;
    var shippingMethodStepNumber = 3;
    var paymentMethodStepNumber = 4;
    var paymentInfoStepNumber = 5;
    var confirmOrderStepNumber = 6;
    if (!Model.ShippingRequired)
    {
        paymentMethodStepNumber = paymentMethodStepNumber - 2;
        paymentInfoStepNumber = paymentInfoStepNumber - 2;
        confirmOrderStepNumber = confirmOrderStepNumber - 2;
    }
    if (Model.DisableBillingAddressCheckoutStep)
    {
        shippingAddressStepNumber--;
        shippingMethodStepNumber--;
        paymentMethodStepNumber--;
        paymentInfoStepNumber--;
        confirmOrderStepNumber--;
    }


    @*<div>
            Usuario Activo: @workContext.GetCurrentCustomerAsync().Result.Username
        </div>*@
}
<div class="page checkout-page">
    @*<div class="page-title">
            <h1>@T("Checkout")</h1>
        </div>*@
    <div class="page-body checkout-data">
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.OpcContentBefore })
        <ol class="opc" id="checkout-steps">
            <li id="opc-billing" class="tab-section allow" style="display:none">
                <div class="step-title">
                    @*<span class="number">@billingAddressStepNumber</span>*@
                    <h2 class="title"><span id="AddNewAddressback" style="display:none;" class="back" onclick="BacktoAddress(); return false;"></span>@T("Checkout.BillingAddress")</h2>
                    <a href="@Url.RouteUrl("Homepage")">X</a>

                </div>
                <div id="checkout-step-billing" class="step a-item" style="display: none;">
                    <form id="co-billing-form" action="">
                        <div id="checkout-billing-load">
                            @await Html.PartialAsync("OpcBillingAddress", Model.BillingAddress)
                            @*billing address content will be loaded here*@
                        </div>
                    </form>
                    <script asp-location="Footer">
                        Billing.init('#co-billing-form', '@(storeLocation)checkout/OpcSaveBilling/',
                            @(Model.DisableBillingAddressCheckoutStep.ToString().ToLowerInvariant()),
                            @((await _customerService.IsGuestAsync(await workContext.GetCurrentCustomerAsync())).ToString().ToLowerInvariant()));
                        if ($("#billing-address-select").length > 0) {
                            Billing.newAddress(!$('#billing-address-select').val());
                        }
                    </script>
                    @if (children.Count <= maxSubaccounts)
                    {
                <div class="new-btn">
                    <a id="new-address-button" class="btn-link" onclick="Billing.resetBillingForm(); Billing.newAddress(true); return false;">agregar una cuenta</a>
                </div>
                    }
                <div class="buttons checkout-button-fix" id="billing-buttons-container">
                    @*<button id="edit-address-button" type="button" class="button-1" onclick="Billing.editAddress('@(storeLocation)checkout/GetAddressById/'); return false;">@T("Common.Edit")</button>*@

                    @*<button id="delete-address-button" type="button" class="button-1" onclick="Billing.deleteAddress('@(storeLocation)checkout/DeleteEditAddress/'); return false;">@T("Common.Delete")</button>*@

                    @*<button id="save-address-button" style="display: none" type="button" class="button-1" onclick="Billing.saveEditAddress('@(storeLocation)checkout/SaveEditAddress/'); return false;">@T("Common.Save")</button>*@
                    
                    <button type="button" style="@cnt == 1 ? 'display: block' : 'display: none'" id="btnsaveBilling" name="save" class="button-1 new-address-next-step-button btn-black" onclick="billingSaveWithValidation(@cnt,@firstChild,@lastChild,'@(storeLocation)',@maxSubaccounts)"> @T("Common.Continue") </button>
                    <script asp-location="Footer">
                        $(document).ready(function () {
                            billingSaveWithValidation(@cnt,@firstChild,@lastChild, '@(storeLocation)',@maxSubaccounts);
                        });
                            function billingSaveWithValidation(childrenCount, firstChildId, lastChildId, storeLocation, maxSubaccounts) {
                                var creatingScreen = document.getElementById('AddNewAddressback').style.display != 'none';

                                if (creatingScreen) {
                                    if (childrenCount >= maxSubaccounts + 1) {
                                        //Case 1: Last Account is deleted and new one is created
                                        //url=storeLocation+'checkout/DeleteEditAddress/'
                                        //Billing.deleteAddress(url, lastChildId);
                                        //Billing.save();

                                        //Case 2: Don't Create new address
                                        alert("Address not created");
                                        //Throw error if necessary
                                    }
                                    else {
                                        Billing.save();
                                    }
                                }
                                else {
                                    if (firstChildId !== 0)
                                        Billing.save(firstChildId);
                                }
                                
                            }
                    </script>

                        <span class="please-wait" id="billing-please-wait" style="display: none;">@T("Common.LoadingNextStep")</span>
                    </div>
                </div>
            </li>
            @if (Model.ShippingRequired)
            {
                <li id="opc-shipping" class="tab-section">
                    <div class="step-title">
                        <span class="number">@shippingAddressStepNumber</span>
                        <h2 class="title">@T("Checkout.ShippingAddress")</h2>
                    </div>
                    <div id="checkout-step-shipping" class="step a-item" style="display: none;">
                        <form action="" id="co-shipping-form">
                            <div id="checkout-shipping-load">
                                @*shipping address content will be loaded here*@
                            </div>
                        </form>
                        <script asp-location="Footer">
                            Shipping.init('#co-shipping-form', '@(storeLocation)checkout/OpcSaveShipping/');
                            if ($("#shipping-address-select").length > 0) {
                                Shipping.newAddress(!$('#shipping-address-select').val());
                            }
                        </script>
                        <div class="buttons" id="shipping-buttons-container">
                            @if (!Model.DisableBillingAddressCheckoutStep)
                            {
                                <p class="back-link">
                                    <a href="#" onclick="Checkout.back(); return false; "><small>&laquo; </small>@T("Common.Back")</a>
                                </p>
                            }
                            <button type="button" class="button-1 new-address-next-step-button" onclick="Shipping.save()">@T("Common.Continue")</button>
                            <span id="shipping-please-wait" class="please-wait" style="display: none;"> @T("Common.LoadingNextStep")</span>
                        </div>
                    </div>
                </li>
                <li id="opc-shipping_method" class="tab-section">
                    <div class="step-title">
                        <span class="number">@shippingMethodStepNumber</span>
                        <h2 class="title">@T("Checkout.ShippingMethod")</h2>
                    </div>
                    <div id="checkout-step-shipping-method" class="step a-item" style="display: none;">
                        <form id="co-shipping-method-form" action="">
                            <div id="checkout-shipping-method-load">
                                @*shipping methods content will be loaded here*@
                            </div>
                            <script asp-location="Footer">
                                var localized_data = {
                                    NotAvailableMethodsError: "@T("ShippingMethod.NotAvailableMethodsError")",
                                    SpecifyMethodError: "@T("ShippingMethod.SpecifyMethodError")"
                                };
                                ShippingMethod.init('#co-shipping-method-form', '@(storeLocation)checkout/OpcSaveShippingMethod/', localized_data);
                            </script>
                            <div class="buttons" id="shipping-method-buttons-container">
                                <p class="back-link">
                                    <a href="#" onclick="Checkout.back(); return false;"><small>&laquo; </small>@T("Common.Back")</a>
                                </p>
                                <button type="button" class="button-1 shipping-method-next-step-button" onclick="ShippingMethod.save()">@T("Common.Continue")</button>
                                <span id="shipping-method-please-wait" class="please-wait" style="display: none;">@T("Common.LoadingNextStep")</span>
                            </div>
                        </form>
                    </div>
                </li>
            }
            <li id="opc-payment_method" class="tab-section">
                <div class="step-title">
                    <span class="number">@paymentMethodStepNumber</span>
                    <h2 class="title">@T("Checkout.PaymentMethod")</h2>
                </div>
                <div id="checkout-step-payment-method" class="step a-item" style="display: none;">
                    <form action="" id="co-payment-method-form">
                        <div id="checkout-payment-method-load">
                            @*payment methods content will be loaded here*@ Payment is not required
                        </div>
                    </form>
                    <script asp-location="Footer">
                        var localized_data = {
                            NotAvailableMethodsError: "@T("PaymentMethod.NotAvailableMethodsError")",
                            SpecifyMethodError: "@T("PaymentMethod.SpecifyMethodError")"
                        };
                        PaymentMethod.init('#co-payment-method-form', '@(storeLocation)checkout/OpcSavePaymentMethod/', localized_data);
                    </script>
                    <div class="buttons" id="payment-method-buttons-container">
                        @*<p class="back-link">
                                <a href="#" onclick="Checkout.back(); return false;"><small>&laquo; </small>@T("Common.Back")</a>
                            </p>*@
                        <button type="button" name="save" class="button-1 payment-method-next-step-button btn-black" onclick="PaymentMethod.save()">@T("Common.Continue")</button>
                        <span class="please-wait" id="payment-method-please-wait" style="display: none;">@T("Common.LoadingNextStep")</span>
                    </div>
                </div>
            </li>
            <li id="opc-payment_info" class="tab-section">
                <div class="step-title">
                    <span class="number">@paymentInfoStepNumber</span>
                    <h2 class="title">@T("Checkout.PaymentInfo")</h2>
                </div>
                <div id="checkout-step-payment-info" class="step a-item" style="display: none;">
                    <form action="" id="co-payment-info-form">
                        <div id="checkout-payment-info-load">
                            @*payment info content will be loaded here*@ Payment is not required
                        </div>
                    </form>
                    <script asp-location="Footer">
                        PaymentInfo.init('#co-payment-info-form', '@(storeLocation)checkout/OpcSavePaymentInfo/');
                    </script>
                    <div class="buttons" id="payment-info-buttons-container">
                        @*<p class="back-link">
                                <a href="#" onclick="Checkout.back(); return false;"><small>&laquo; </small>@T("Common.Back")</a>
                            </p>*@
                        <button type="button" class="button-1 payment-info-next-step-button" onclick="PaymentInfo.save()">@T("Common.Continue")</button>
                        <span class="please-wait" id="payment-info-please-wait" style="display: none;">@T("Common.LoadingNextStep")</span>
                    </div>
                </div>
            </li>
            <li id="opc-confirm_order" class="tab-section">
                <div class="step-title">
                    <h2 class="title"><a class="back" href="@Url.RouteUrl("ShoppingCart")"></a> @T("Checkout.ConfirmOrder")</h2>
                    <a href="@Url.RouteUrl("Homepage")">X</a>
                </div>
                <div id="checkout-step-confirm-order" class="step a-item" style="display: none;">
                    <div id="checkout-confirm-order-load">
                        @*confirm order content will be loaded here*@
                    </div>
                    <script asp-location="Footer">
                        ConfirmOrder.init('@(storeLocation)checkout/OpcConfirmOrder/', '@Url.RouteUrl("CheckoutCompleted")');
                    </script>
                    <div class="buttons checkout-button-fix" id="confirm-order-buttons-container">
                        @*<p class="back-link">
                                <a href="#" onclick="Checkout.back(); return false;"><small>&laquo; </small>@T("Common.Back")</a>
                            </p>*@
                        <button type="button" class="button-1 confirm-order-next-step-button btn-black" onclick="ConfirmOrder.save()">@T("Common.Confirm")</button>
                        <span class="please-wait" id="confirm-order-please-wait" style="display: none;">@T("Checkout.SubmittingOrder")</span>
                    </div>
                </div>
            </li>
        </ol>
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.OpcContentAfter })
    </div>
    <script asp-location="Footer">

        Accordion.init('checkout-steps', '.step-title', true);
        Accordion.openSection('#opc-billing');
        Checkout.init('@(storeLocation)cart/');
        if (Billing.disableBillingAddressCheckoutStep)
        {
            Accordion.hideSection('#opc-billing');
            billingSaveWithValidation(@cnt, @firstChild, @lastChild, '@(storeLocation)', @maxSubaccounts)
        }

        function BacktoAddress() {
            $("#AddNewAddressback").hide();
            $('#delete-address-button').show();
            $(".select-billing-address").show();
            $(".new-billing-address").hide();
            @*@if (children.Count <= 5)
            {
                <text>$("#new-address-button").show();</text>
            }*@
            Checkout.back();
            window.location.reload();
        }
    </script>
</div>
