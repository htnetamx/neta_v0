@using Nop.Core.Domain.Seo
@using Nop.Services.Configuration
@inject SeoSettings seoSettings
@inject Nop.Core.IWebHelper webHelper
@inject ISettingService settingService
@{
    Layout = "_ColumnsOne";

    //title
    if (!string.IsNullOrEmpty(seoSettings.HomepageTitle))
    {
        Html.AddTitleParts(seoSettings.HomepageTitle);
    }

    //meta
    if (!string.IsNullOrEmpty(seoSettings.HomepageDescription))
    {
        Html.AddMetaDescriptionParts(seoSettings.HomepageDescription);
    }

    //page class
    Html.AppendPageCssClassParts("html-home-page");
}

@{
    var getPromoRayo = await settingService.GetSettingAsync("producteditorsettings.promorayo");
    var promoRayo = (getPromoRayo != null) ? bool.Parse(getPromoRayo.Value) : false;
    if (promoRayo)
    {
        <div class="form-popup" id="promoRayoForm" style="border: 5px solid black; padding: 20px; display: flex; align-content: center; align-items: center; position: fixed; justify-content: center; z-index: 100; margin-left: 15vw; background: orange; margin-top: 15vh;">
            <div style="cursor: pointer; position: absolute; top: 0px; right: 0px; background: white; height: 15%; width: 4%; display: flex; justify-content: center; align-items: center; align-content: center; font-size: medium; color: red; font-weight: bold;">
                <span id='close' onclick='document.getElementById("promoRayoForm").style.display="none"'>x</span>
            </div>
            <form action="/promo-rayo" style="display: flex;flex-direction: column;justify-content: center;align-items: center;align-content: center;">
                <h1>Encuentra Aqui Tus Promos Rayo</h1>
                <input type="submit" value="Promo Rayo" style="background-color: #4ab2f1; color: white; border-radius: 15px; padding: 2vh 3vw; margin: 0 2vw; width: 40vw">
            </form>
        </div>
    }
}

<div class="page home-page">
    <div class="page-body">
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageTop })
        @await Component.InvokeAsync("TopicBlock", new { systemName = "HomepageText" })
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeCategories })
        @await Component.InvokeAsync("HomepageCategories")
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeProducts })
        @await Component.InvokeAsync("HomepageMarkAsNewProducts")
        @await Component.InvokeAsync("CustomeHomepageProducts")
        @*@await Component.InvokeAsync("HomepageProducts")*@
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeBestSellers })
        @await Component.InvokeAsync("HomepageBestSellers")
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeNews })
        @await Component.InvokeAsync("HomepageNews")
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforePoll })
        @await Component.InvokeAsync("HomepagePolls")
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBottom })
    </div>
</div>